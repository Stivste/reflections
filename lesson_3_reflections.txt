When would you want to use a remote repository rather than keeping all your work
local?

When the project is open to contributors and you would like others to join the development. Also to create your public portfolio.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because you will be able to evaluate the changes pushed to GitHub by contributors and other developers before implementing them into your current working file.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks allows you to take a copy of a repository made by someone else (this is clearly recorded and documented on GitHub). Clones makes a copy of a local file to another local area as well as a copy of an online repository to your local machine (downloading it). Branches are different pathways where commits are done in order to divide the development process (if required).

What is the benefit of having a copy of the last known state of the remote stored locally?

-?-

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

In the past I would have used team-speak in order to work together on a file shared online (dropbox, Gdrive, etc). Slack is another app used to communicate although changes still need to be performed on a shared file using other systems.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When I would like to get a collaboration/opinion from a colleague or a contributor. I could also do it just to have two or more parts of a code developed at the same time via single pathways so that the master branch will only have working and optimised code (once updated by merging other branches).